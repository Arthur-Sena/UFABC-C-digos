# -*- coding: utf-8 -*-
"""ProjetoFinal-BCC.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pxrbzoLyPvMH4vZGFhQ4pwYXscXN1Ql5
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd

import matplotlib.pyplot as plt
# %matplotlib inline

class bcolors:
    CERTO = '\033[92m' #GREEN
    ALERTA = '\033[93m' #YELLOW
    ERRO = '\033[91m' #RED
    RESET = '\033[0m' #RESET COLOR

compraDoCliente = []
class produtoComprado:  
    def __init__(self, produto, quantidade, preco):  
        self.produto = produto  
        self.quantidade = quantidade 
        self.preco = preco 

opcaoEscolhidaCliente = '1 - Voltar as compras'
encerrarProjeto = False

produtosGerente = pd.read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vRZUYMHzSKslt5RTAU05AcGjU2K3dZC3tF-T3WrHtLXC4JEKJQ4I2WDkdqOUTA5zVs-RMCx_7IB_K98/pub?gid=369467503&single=true&output=csv", sep=(","))
produtosDisponiveis = pd.DataFrame(produtosGerente['Produto'])
produtosDisponiveis['Descrição'] = produtosGerente['Descrição'] 
produtosDisponiveis['Preço'] = produtosGerente['Preço'] 

categoriaDeProdutos = list(set(produtosDisponiveis['Descrição']))

print("Seja bem-vindo ao mercado BCC!\n")

while encerrarProjeto == False:
  #Painel com opções iniciais
  print("+ Qual o seu tipo de acesso? +")
  print("|    1 - Cliente             |")
  print("|    2 - Gerente             |")
  print("|    3 - Sair                |")
  print("+============================+\n")

  tipoDeUsuario = input("Qual o seu tipo de acesso? ").lower()

  opcaoEscolhidaCliente = '1 - Voltar as compras'
  if ('1' in tipoDeUsuario and '2' not in tipoDeUsuario) or ('cli' in tipoDeUsuario and 'ger' not in tipoDeUsuario):
    while opcaoEscolhidaCliente != "4 - Voltar ao menu inicial" and opcaoEscolhidaCliente != "5 - Encerrar projeto":

      # 1 - Comprar produtos
      if opcaoEscolhidaCliente == '1 - Voltar as compras':
        print("\n+ Olá, digite o nome da categoria de produto que deseja comprar:")

        categoriaEscolhida = 'inexistente'
        while categoriaEscolhida not in categoriaDeProdutos:
          for i in range(0, len(categoriaDeProdutos)):
            print(f"| {categoriaDeProdutos[i]}")

          categoriaEscolhida = input("Escolha: ").title()

          if categoriaEscolhida not in categoriaDeProdutos:
            print(f"\n{bcolors.ERRO}Hummm, categoria não encontrada")
            print(f"Tente novamente!{bcolors.RESET}\n")
          else:
            print(f"\n{bcolors.CERTO}Buscando produtos...{bcolors.RESET}\n")

        produtosDaCategoria = produtosDisponiveis.query(f"Descrição == '{categoriaEscolhida}'")
        print(produtosDaCategoria)

        produtoEscolhido = input("\n+ Digite o nome do produto que você deseja adicionar ao carrinho: ").title()

        produtosEncontrados = list(set(produtosDaCategoria['Produto']))
        while produtoEscolhido not in produtosEncontrados:
          print(f"\n{bcolors.ERRO}Produto não encontrado, tente novamente!{bcolors.RESET}\n")
          produtoEscolhido = input("\n+ Digite o nome do produtos que você deseja adicionar ao carrinho: ").title()

        quantidadeDesejada = input(f"Digite a quantidade desejada: ")
        quantidadeDesejadaEhInt = False
        while quantidadeDesejadaEhInt == False:
            try:
              if type(eval(quantidadeDesejada)) == type(1):
                quantidadeDesejada = int(quantidadeDesejada)
                quantidadeDesejada = int(quantidadeDesejada)
                quantidadeDesejadaEhInt = True    
              elif type(eval(quantidadeDesejada)) == type(1.5):
                print(f'{bcolors.ALERTA}Erro. Digite um número{bcolors.RESET}')
                quantidadeDesejada = input(f"Digite a quantidade de desejada: ")
              elif type(eval(quantidadeDesejada)) == type(True):
                print(f'{bcolors.ALERTA}Erro. Digite um número{bcolors.RESET}')
                quantidadeDesejada = input(f"Digite a quantidade de desejada: ")
              else:
                print(f'{bcolors.ALERTA}Erro. Digite um número{bcolors.RESET}')
                quantidadeDesejada = input(f"Digite a quantidade de desejada: ")
            except NameError as n:
              print(f'{bcolors.ALERTA}Erro. Digite um número{bcolors.RESET}')
              quantidadeDesejada = input(f"Digite a quantidade de desejada: ")

        produtoEncontrado = produtosDisponiveis.query(f"Produto == '{produtoEscolhido}'")
        compraDoCliente.append( 
            produtoComprado( produtoEncontrado['Produto'], quantidadeDesejada, produtoEncontrado['Preço'] )
            )
        print(f"\n{bcolors.CERTO}Produto adicionado ao carrinho!{bcolors.RESET}\n")

      #Escolha 2: Ver produtos selecionados
      elif opcaoEscolhidaCliente == '2 - Ver produtos selecionados':
        print("\n Produtos Selecionados:\n")

        precoDaCompra = 0
        for obj in compraDoCliente: 
          nomeDoProduto = str(obj.produto).split()
          quantidade = str(obj.quantidade)
          preco = str(obj.preco).split()

          print(str(f"{quantidade} {nomeDoProduto[1]} por R${preco[1]} cada."))
          precoDaCompra = precoDaCompra + (obj.quantidade * float(preco[1]))
        print(f"\n{bcolors.ERRO}Preço total: {precoDaCompra:.2f}{bcolors.RESET}\n")
        input("Digite enter para continuar ")

      #Escolha 3: Encerrar compra e mostrar nota fiscal pro cliente com preco total da compra + inserir num csv todas as vendas ja realizadas
      elif opcaoEscolhidaCliente == '3 - Encerrar compra':
        precoDaCompra = 0
        print("\n+-------Compra concluída-------+")
        print("| Qnt --- Preço --- Produto")
        print("|")
        for obj in compraDoCliente: 
          nomeDoProduto = str(obj.produto).split()
          quantidade = str(obj.quantidade)
          preco = str(obj.preco).split()

          print(str(f"!  {quantidade}      R${float(preco[1]):.2f}      {nomeDoProduto[1]} "))
          precoDaCompra = precoDaCompra + (obj.quantidade * float(preco[1]))
        print(f"\n{bcolors.CERTO}Preço total: R${precoDaCompra:.2f}{bcolors.RESET}")
        print(f"{bcolors.CERTO}+-------Compra encerrada--------+{bcolors.RESET}")
        input("Digite enter para continuar ")
        compraDoCliente = []
        opcaoEscolhidaCliente = "4 - Voltar ao menu inicial"

      proximoPassoEscolhido = False
      while proximoPassoEscolhido == False:
        print("\n\n")
        print("+----------Próximo  passo----------+")
        print("| 1 - Voltar as compras            |")
        print("| 2 - Ver produtos selecionados    |")
        print("| 3 - Encerrar compra              |")
        print("| 4 - Voltar ao menu inicial       |")
        print("| 5 - Sair da aplicação            |")
        opcaoProximoPasso = input("Escolha o número da opção: ").lower()

        if opcaoProximoPasso == '1': 
          opcaoEscolhidaCliente = "1 - Voltar as compras"
          proximoPassoEscolhido = True
        elif opcaoProximoPasso == '2':
          opcaoEscolhidaCliente = "2 - Ver produtos selecionados"
          proximoPassoEscolhido = True
        elif opcaoProximoPasso == '3':
          opcaoEscolhidaCliente = "3 - Encerrar compra"
          proximoPassoEscolhido = True
        elif opcaoProximoPasso == '4':
          opcaoEscolhidaCliente = "4 - Voltar ao menu inicial"
          # print(f"\n{bcolors.ERRO}Saindo...{bcolors.RESET}\n")
          print("\n")
          proximoPassoEscolhido = True
        elif opcaoProximoPasso == '5':
          opcaoEscolhidaCliente = "5 - Encerrar projeto"
          print(f"\n{bcolors.ERRO}Saindo...{bcolors.RESET}\n")
          proximoPassoEscolhido = True
          encerrarProjeto = True

  elif ('2' in tipoDeUsuario and '1' not in tipoDeUsuario) or ('ger' in tipoDeUsuario and 'cli' not in tipoDeUsuario):
    print("\nOlá, gerente!\n")

    opcaoEscolhidaGerente = 0
    while opcaoEscolhidaGerente != '4':
      print("+===  O que você quer ver?  ===+")
      print("|  1 - Relatório dos produtos  |")
      print("|  2 - Relatório de vendas     |")
      print("|  3 - Relatório de lucros     |")
      print("|  4 - Sair                    |")
      print("+==============================+\n")
      opcaoEscolhidaGerente = input("Digite o número da opção: ")

      if opcaoEscolhidaGerente == '4':
        print(f"\n{bcolors.ERRO}Saindo...{bcolors.RESET}\n")
        break;
      elif opcaoEscolhidaGerente == '1':
        produtosGerente['MargemDeLucro'] = round( 100 - (100/produtosGerente['Preço'] * produtosGerente['Valor de Compra']) ,2)
        precoMedioDosProdutos = produtosGerente['Preço'].mean()
        menorPrecoDeProduto = produtosGerente['Preço'].min()
        maiorPrecoDeProduto = produtosGerente['Preço'].max()
        maiorMargemDeLucro = produtosGerente['MargemDeLucro'].max()
        produtoComMaiorMargem = produtosGerente.query(f"MargemDeLucro == {maiorMargemDeLucro}")
        produtoMaiorMargem = str(produtoComMaiorMargem['Produto']).split()
        menorMargemDeLucro = produtosGerente['MargemDeLucro'].min()
        produtoComMenorMargem = produtosGerente.query(f"MargemDeLucro == {menorMargemDeLucro}")
        produtoMenorMargem = str(produtoComMenorMargem['Produto']).split()
  
        print("\n Relatório dos produtos\n")
        print(f"Média entre o preço dos produtos : {precoMedioDosProdutos:.2f}")
        print(f"Preço do produto mais barato     : {menorPrecoDeProduto:.2f}")
        print(f"Preço do produto mais caro       : {maiorPrecoDeProduto:.2f}")
        print(f"Produto com maior margem de lucro: {produtoMaiorMargem[1]}, margem de {maiorMargemDeLucro:.2f}%")
        print(f"Produto com menor margem de lucro: {produtoMenorMargem[1]}, margem de {menorMargemDeLucro:.2f}%")
        input("Digite enter para continuar")
  
      elif opcaoEscolhidaGerente == '2':
        produtoMenosVendido = produtosGerente['QuantidadeDeVendas'].min()
        nomeProdutoMenosVenda = produtosGerente.query(f"QuantidadeDeVendas == {produtoMenosVendido}")
        produtoMenosVenda = str(nomeProdutoMenosVenda['Produto']).split()
  
        produtoMaisVendido = produtosGerente['QuantidadeDeVendas'].max()
        nomeProdutoMaiorVenda = produtosGerente.query(f"QuantidadeDeVendas == {produtoMaisVendido}")
        produtoMaiorVenda = str(nomeProdutoMaiorVenda['Produto']).split()
        
        totalDeVendas = produtosGerente['QuantidadeDeVendas'].sum()
  
        print("\nRelatório de vendas\n")
        print(f"\nTotal de vendas      : {totalDeVendas}")
        print(f"Produto mais vendido : {produtoMaiorVenda[1]} ({produtoMaisVendido})")
        print(f"Produto menos vendido: {produtoMenosVenda[1]} ({produtoMenosVendido})\n")
  
        categoriaAgrupada = produtosGerente.groupby(by=["Descrição"]).sum()
  
        plt.suptitle('Relatório de vendas por categoria')
        plt.bar(categoriaDeProdutos, categoriaAgrupada['QuantidadeDeVendas'])
        plt.show()
  
        print("\n\n")
        input("Digite enter para continuar")
      elif opcaoEscolhidaGerente == '3':
        produtosGerente['MargemDeLucro'] = round( 100 - (100/produtosGerente['Preço'] * produtosGerente['Valor de Compra']) ,2)
        mediaMargemDeLucro = produtosGerente['MargemDeLucro'].mean()
        varianciaMargemDeLucro = produtosGerente['MargemDeLucro'].var()
        amplitudeMargemDeLucro = produtosGerente['MargemDeLucro'].max() - produtosGerente['MargemDeLucro'].min()
  
        print("\nRelatório de lucros\n")
        print(f"Margem de lucro média      : {mediaMargemDeLucro:.2f}")
        print(f"Variância da margem de lucro: {varianciaMargemDeLucro:.2f}")
        print(f"Amplitude da margem de lucro: {amplitudeMargemDeLucro:.2f}\n")
  
        categoriaAgrupada = produtosGerente.groupby(by=["Descrição"]).mean()
  
        plt.suptitle('Média da margem de lucro (por categoria)')
        plt.bar(categoriaDeProdutos, categoriaAgrupada['MargemDeLucro'])
        plt.show()
        input("Digite enter para continuar")
  else: 
    print(f'{bcolors.ERRO}Saindo...{bcolors.RESET}')
    break
print(f"{bcolors.CERTO}Obrigado, volte sempre!{bcolors.RESET}")